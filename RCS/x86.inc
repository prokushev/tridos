head	0.53;
access;
symbols;
locks
	BlackPhantom:0.53
	BlackPhantom:0.7.0.1; strict;
comment	@# @;


0.53
date	2002.05.12.23.10.02;	author BlackPhantom;	state Exp;
branches;
next	0.52;

0.52
date	2001.02.13.04.09.54;	author BlackPhantom;	state Exp;
branches;
next	0.51;

0.51
date	2001.02.12.02.23.02;	author BlackPhantom;	state Exp;
branches;
next	0.50;

0.50
date	2001.02.02.23.44.36;	author BlackPhantom;	state Exp;
branches;
next	0.49;

0.49
date	2001.01.19.19.25.00;	author BlackPhantom;	state Exp;
branches;
next	0.48;

0.48
date	2000.12.27.05.37.22;	author BlackPhantom;	state Exp;
branches;
next	0.47;

0.47
date	2000.11.19.00.48.14;	author BlackPhantom;	state Exp;
branches;
next	0.46;

0.46
date	2000.08.31.02.13.37;	author BlackPhantom;	state Exp;
branches;
next	0.45;

0.45
date	2000.08.15.23.51.37;	author BlackPhantom;	state Exp;
branches;
next	0.44;

0.44
date	2000.03.23.14.09.09;	author BlackPhantom;	state Exp;
branches;
next	0.43;

0.43
date	99.08.10.02.48.18;	author BlackPhantom;	state Exp;
branches;
next	0.42;

0.42
date	99.08.06.17.48.52;	author BlackPhantom;	state Exp;
branches;
next	0.41;

0.41
date	99.07.16.03.18.20;	author BlackPhantom;	state Exp;
branches;
next	0.40;

0.40
date	99.06.05.20.07.01;	author BlackPhantom;	state Exp;
branches;
next	0.39;

0.39
date	99.05.28.22.41.24;	author BlackPhantom;	state Exp;
branches;
next	0.38;

0.38
date	99.05.28.18.27.56;	author BlackPhantom;	state Exp;
branches;
next	0.37;

0.37
date	99.05.28.04.20.40;	author BlackPhantom;	state Exp;
branches;
next	0.36;

0.36
date	99.05.27.22.22.07;	author BlackPhantom;	state Exp;
branches;
next	0.35;

0.35
date	99.05.23.19.52.27;	author BlackPhantom;	state Exp;
branches;
next	0.34;

0.34
date	99.05.23.15.13.32;	author BlackPhantom;	state Exp;
branches;
next	0.33;

0.33
date	99.05.21.02.27.28;	author BlackPhantom;	state Exp;
branches;
next	0.32;

0.32
date	99.05.19.01.13.28;	author BlackPhantom;	state Exp;
branches;
next	0.31;

0.31
date	99.05.17.18.49.52;	author BlackPhantom;	state Exp;
branches;
next	0.30;

0.30
date	99.05.11.17.10.49;	author BlackPhantom;	state Exp;
branches;
next	0.29;

0.29
date	99.05.06.22.37.51;	author BlackPhantom;	state Exp;
branches;
next	0.28;

0.28
date	99.05.05.16.38.55;	author BlackPhantom;	state Exp;
branches;
next	0.27;

0.27
date	99.04.19.21.02.51;	author BlackPhantom;	state Exp;
branches;
next	0.26;

0.26
date	99.04.18.12.54.59;	author BlackPhantom;	state Exp;
branches;
next	0.25;

0.25
date	99.04.17.03.11.27;	author BlackPhantom;	state Exp;
branches;
next	0.24;

0.24
date	99.04.14.18.28.12;	author BlackPhantom;	state Exp;
branches;
next	0.23;

0.23
date	99.04.14.16.43.57;	author BlackPhantom;	state Exp;
branches;
next	0.22;

0.22
date	99.04.12.18.51.50;	author BlackPhantom;	state Exp;
branches;
next	0.21;

0.21
date	99.04.11.12.50.45;	author BlackPhantom;	state Exp;
branches;
next	0.20;

0.20
date	99.04.05.03.17.18;	author BlackPhantom;	state Exp;
branches;
next	0.19;

0.19
date	99.03.30.23.45.44;	author BlackPhantom;	state Exp;
branches;
next	0.18;

0.18
date	99.03.29.18.33.30;	author BlackPhantom;	state Exp;
branches;
next	0.17;

0.17
date	99.03.22.22.40.13;	author BlackPhantom;	state Exp;
branches;
next	0.16;

0.16
date	99.03.18.04.09.05;	author BlackPhantom;	state Exp;
branches;
next	0.15;

0.15
date	99.03.16.02.16.25;	author BlackPhantom;	state Exp;
branches;
next	0.14;

0.14
date	99.03.16.00.23.39;	author BlackPhantom;	state Exp;
branches;
next	0.13;

0.13
date	99.03.13.23.36.05;	author BlackPhantom;	state Exp;
branches;
next	0.12;

0.12
date	99.03.12.22.09.18;	author BlackPhantom;	state Exp;
branches;
next	0.11;

0.11
date	99.03.09.04.23.38;	author BlackPhantom;	state Exp;
branches;
next	0.10;

0.10
date	99.03.01.23.10.12;	author BlackPhantom;	state Exp;
branches;
next	0.9;

0.9
date	99.02.25.21.58.28;	author BlackPhantom;	state Exp;
branches;
next	0.8;

0.8
date	99.02.24.02.21.35;	author BlackPhantom;	state Exp;
branches;
next	0.7;

0.7
date	99.02.18.00.08.43;	author BlackPhantom;	state Exp;
branches
	0.7.0.1;
next	0.6;

0.6
date	99.02.17.17.02.34;	author BlackPhantom;	state Exp;
branches;
next	0.5;

0.5
date	99.02.10.04.44.39;	author BlackPhantom;	state Exp;
branches;
next	0.4;

0.4
date	98.12.23.01.07.43;	author BlackPhantom;	state Exp;
branches;
next	0.3;

0.3
date	98.06.05.12.47.53;	author BlackPhantom;	state Exp;
branches;
next	0.2;

0.2
date	98.05.28.02.59.00;	author BlackPhantom;	state Exp;
branches;
next	0.1;

0.1
date	98.05.16.12.51.51;	author BlackPhantom;	state Exp;
branches;
next	;

0.7.0.1
date	99.02.21.04.01.59;	author BlackPhantom;	state Exp;
branches;
next	;


desc
@Include file for protected mode definitions
@


0.53
log
@Last developed version
@
text
@;=============================================================================
;
;	This source code file is copyright (c) Vadim Drubetsky AKA the 
; Black Phantom. All rights reserved.
;
;	This source code file is a part of the Tripple-DOS project. Your use 
; of this source code must fully comply with the accompanying license file, 
; LICENSE.TXT. You must have this file enclosed with your Tripple-DOS copy in
; order for it to be legal.
;
;	In no event, except for when it is explicitly stated by the applicable 
; law, shall Vadim Drubetsky aka the Black Phantom be liable for any special,
; incidental, indirect, or consequential damages (including but not limited to
; profit loss, business interruption, loss of business information, or any 
; other pecuniary loss) arising out of the use of or inability to use 
; Tripple-DOS, even if he has been advised of the possibility of such damages.
;
;=============================================================================

;=============================================================================
;
;				X86.INC
;				-------
;	General x86 definitions for Tripple-DOS. Contains needed constant 
; definitions and macros.
;
;	For MASM v6.1x.
;
; 	24/08/95
;
;	Black Phantom.
;
;=============================================================================

;-----------------------------------------------------------------------------
;	CPU control registers.
;-----------------------------------------------------------------------------
CR0_PG	EQU	80000000h	; Paging enable
CR0_CD	EQU	40000000h	; Caching disable
CR0_NW	EQU	20000000h	; Non-write through
CR0_PE	EQU	00000001h	; Protection enable (protected mode).

;-----------------------------------------------------------------------------
;	Eflags register.
;-----------------------------------------------------------------------------
FL_VM	EQU	00020000h	; VM flag
FL_NT	EQU	00004000h	; NT flag
FL_CF	EQU	00000001h	; C flag
FL_PF	EQU	00000004h	; P flag
FL_AF	EQU	00000010h	; AC flag
FL_ZF	EQU	00000040h	; Z flag
FL_SF	EQU	00000080h	; S flag
FL_TF	EQU	00000100h	; T flag
FL_IF	EQU	00000200h	; I flag
FL_DF	EQU	00000400h	; D flag
FL_OF	EQU	00000800h	; O flag
FL_RF	EQU	00010000h	; R flag

;
;	Opcodes that generate #GP in VM when IOPL < 3.
;
	OP_INT		EQU	0CDh
	OP_IRET		EQU	0CFh
	OP_CLI		EQU	0FAh
	OP_STI		EQU	0FBh
	OP_PUSHF	EQU	9Ch
	OP_POPF		EQU	9Dh

;
;	I/O opcodes.
;
	OP_IN8_IMM	EQU	0E4h
	OP_IN16_IMM	EQU	0E5h
	OP_IN8_DX	EQU	0ECh
	OP_IN16_DX	EQU	0EDh
	OP_INSB		EQU	6Ch
	OP_INSW		EQU	6Dh
	OP_OUT8_IMM	EQU	0E6h
	OP_OUT16_IMM	EQU	0E7h
	OP_OUT8_DX	EQU	0EEh
	OP_OUT16_DX	EQU	0EFh
	OP_OUTSB	EQU	6Eh
	OP_OUTSW	EQU	6Fh
	OP_OPER_PREFIX	EQU	66h
	OP_ADDR_PREFIX	EQU	67h
	OP_REPNZ_PREFIX	EQU	0F2h
	OP_REPZ_PREFIX	EQU	0F3h
	OP_CS_PREFIX	EQU	2Eh
	OP_SS_PREFIX	EQU	36h
	OP_DS_PREFIX	EQU	3Eh
	OP_ES_PREFIX	EQU	26h
	OP_FS_PREFIX	EQU	64h
	OP_GS_PREFIX	EQU	65h

;
;	DTR structure (GDTR/IDTR).
;
DTR	STRUC
	Limit	DW	?
	Base	DD	?
DTR	ENDS

;
;	Descriptor structure.
;
Descriptor286	STRUCT
	Limit		DW	?
	BaseLow		DW	?
	BaseHigh	DB	?
	Access		DB	?
	Reserved	DW	?
Descriptor286	ENDS

;
;	386 Descriptor structure.
;
Descriptor386	STRUCT
	LimitLow	DW	?
	BaseLow		DW	?
	BaseHigh24	DB	?
	Access		DB	?
	LimitHigh20	DB	?
	BaseHigh32	DB	?
Descriptor386	ENDS

;
;	Interrupt, exception and call gate structure.
;
Gate286		STRUCT
	DestOff		DW	?
	DestSel		DW	?
	NParams		DB	?
	Access		DB	?
	Reserved	DW	?
Gate286		ENDS


;
;	386 Interrupt, exception and call gate structure.
;
Gate386		STRUCT
	DestOff		DW	?
	DestSel		DW	?
	NParams		DB	?
	Access		DB	?
	DestOff32	DW	?
Gate386		ENDS


;
;	286 TSS segment structure.
;
Tss286		STRUCT
	Link		DW	?

	Sp0		DW	?
	Ss0		DW	?
	Sp1		DW	?
	Ss1		DW	?
	Sp2		DW	?
	Ss3		DW	?

	rIp		DW	?
	rFlags		DW	?
	rAx		DW	?
	rCx		DW	?
	rDx		DW	?
	rBx		DW	?
	rSp		DW	?
	rBp		DW	?
	rSi		DW	?
	rDi		DW	?
	rEs		DW	?
	rCs		DW	?
	rSs		DW	?
	rDs		DW	?
	rLdtr		DW	?
Tss286		ENDS

	TSS286_SIZE	EQU	SIZEOF Tss286


;
;	386 TSS segment structure.
;
Tss386		STRUCT
	Link		DW	?
			DW	?
	Esp0		DD	?
	Ss0		DW	?
			DW	?
	Esp1		DD	?
	Ss1		DW	?
			DW	?
	Esp2		DD	?
	Ss2		DW	?
			DW	?

	rCr3		DD	?
	rEip		DD	?
	rEflags		DD	?
	rEax		DD	?
	rEcx		DD	?
	rEdx		DD	?
	rEbx		DD	?
	rEsp		DD	?
	rEbp		DD	?
	rEsi		DD	?
	rEdi		DD	?

	rEs		DW	?
			DW	?
	rCs		DW	?
			DW	?
	rSs		DW	?
			DW	?
	rDs		DW	?
			DW	?
	rFs		DW	?
			DW	?
	rGs		DW	?
			DW	?
	rLdtr		DW	?
			DW	?

	bTrace		DW	?
	IoTableBase	DW	?

Tss386		ENDS

	TSS386_SIZE	EQU	SIZEOF Tss386
	INT_PERM_SIZE	EQU	32
	IO_PERM_SIZE	EQU	8192
	IO_PERM_START	EQU	TSS386_SIZE + INT_PERM_SIZE
	FULL_TSS_SIZE	EQU	TSS386_SIZE + INT_PERM_SIZE + IO_PERM_SIZE

;
;	Constants definition.
;

; Access rights
	ACC_PRESENT		EQU	10000000b
	ACC_CODE		EQU	00011000b
	ACC_CONFORM_CODE	EQU	00000100b
	ACC_READABLE_CODE	EQU	00000010b
	ACC_DATA		EQU	00010000b
	ACC_EXPDOWN_DATA	EQU	00000100b
	ACC_WRITABLE_DATA	EQU	00000010b
	ACC_ACCESSED_SEGMENT	EQU	00000001b
	ACC_INT_GATE		EQU	00000110b
	ACC_CALL_GATE		EQU	00000100b
	ACC_TRAP_GATE		EQU	00000111b
	ACC_INT386_GATE		EQU	00001110b
	ACC_CALL386_GATE	EQU	00001100b
	ACC_TRAP386_GATE	EQU	00001111b
	ACC_TASK_GATE		EQU	00000101b
	ACC_TSS			EQU	00000001b
	ACC_TSS386		EQU	00001001b
	ACC_LDT			EQU	00000010b

; Segment attributes (386+)
	ATTR_DEF		EQU	01000000b	; D/B attr.
	ATTR_GRAN		EQU	10000000b	; Granularity bit.
	FLAT_ATTR		EQU	ATTR_DEF or ATTR_GRAN

; Live segments access rights
	DATA_ACCESS	=	ACC_PRESENT or ACC_DATA or ACC_WRITABLE_DATA
	CODE_ACCESS	=	ACC_PRESENT or ACC_CODE or ACC_READABLE_CODE
	INT_ACCESS	=	ACC_PRESENT or ACC_INT_GATE
	TRAP_ACCESS	=	ACC_PRESENT or ACC_TRAP_GATE
	INT_386_ACCESS	=	ACC_PRESENT or ACC_INT386_GATE
	TRAP_386_ACCESS	=	ACC_PRESENT or ACC_TRAP386_GATE
	TSS_ACCESS	=	ACC_PRESENT or ACC_TSS
	TASK_GATE_ACCESS = 	ACC_PRESENT or ACC_TASK_GATE
	TSS386_ACCESS	=	ACC_PRESENT or ACC_TSS386
	LDT_ACCESS	=	ACC_PRESENT or ACC_LDT

; Page dir/page table entries attributes.
	PAGE_PRESENT	EQU	001h
	PAGE_WRITABLE	EQU	002h
	PAGE_USER	EQU	004h
	PAGE_ACCESSED	EQU	020h
	PAGE_DIRTY	EQU	040h

; Necessary segments.
	INIT_CS		=	08h	; Initial CS seg
	INIT_DS		=	10h	; Initial DS, ES seg
	INIT_SS		=	18h	; Initial SS seg
	FLAT_DS		=	20h	; Flat data segment
	CODE_32		=	28h	; 32-bit code segment
	GENERAL_TSS	=	30h	; TSS for all tasks
	VIDEO_TXT	=	38h	; Text video segment
	VIDEO_GFX	=	40h	; Gfx. video segment

; Linear addresses base.
	OS_BASE		=	40000000h	; OS base linear address.
	OS_VIDEO_BUF	=	60000000h	; Global OS video buffer.
	OS_1ST_MB	=	70000000h	; Global mapping for 1st Mb.
	OS_HEAP		=	80000000h	; OS heap base linear address
	OS_HEAP_SIZE	=	40000000h	; OS heap size.
	OS_DYN_PAGETBLS	=	0C0000000h	; Space for dynamic page tables.

; Stacks definitions.
	STK_SIZE	=	16384	; Total stack size
	EXC_STK		=	15360	; Exception stack (PL0)
	DBG_STK		=	3072	; Debug stack
	VM_STK		=	1024	; Stack for calling VM int. callbacks.

	CPL0_STK_SIZE	=	512	; Stack size for nested interrupts.

; Size & address constants.
	REAL_MODE_LIMIT	EQU	0FFFFh

; Redirected interrupts.
	PM_IRQ0		=	20h	; IDT entry for IRQ 0.
	PM_IRQ8		=	28h	; IDT entry for IRQ 8.


;
; Macro definitions.
;

JmpFar		MACRO Segm:REQ, Offs:REQ
;
; JMP Segm:Offs
;
	DB	0EAh		; machine-code JMP far
	DW	Offs
	DW	Segm
ENDM

CallFar		MACRO	Segm:REQ, Offs:REQ
;
; JMP Segm:Offs
;
	DB	09Ah		; machine-code CALL far
	DW	Offs
	DW	Segm
ENDM

JmpFar_16_32	MACRO	Segm:REQ, Offs:REQ
;
; JMP Segm:Offs from 16-bit to 32-bit segment.
;
	DB	66h
	DB	0EAh		; machine-code JMP far
	DD	Offs
	DW	Segm
ENDM

JmpFar_32_16	MACRO	Segm:REQ, Offs:REQ
;
; JMP Segm:Offs from 32-bit to 16-bit segment.
;
	DB	66h
	DB	0EAh		; machine-code JMP far
	DW	Offs
	DW	Segm
ENDM

CallFar_16_32	MACRO	Segm:REQ, Offs:REQ
;
; CALL Segm:Offs from 16-bit to 32-bit segment.
;
	DB	66h
	DB	9Ah		; machine-code CALL far
	DD	Offs
	DW	Segm
ENDM

CallFar_32_16	MACRO	Segm:REQ, Offs:REQ
;
; CALL Segm:Offs from 32-bit to 16-bit segment.
;
	DB	66h
	DB	9Ah		; machine-code CALL far
	DW	Offs
	DW	Segm
ENDM


;
; Add GDT segment.
;
ADD_GDT_SEGMENT	MACRO	Base, Limit, Access, Attr
IFNB	<Base>
	mov	eax, Base
ENDIF
	mov	ecx, Limit
	mov	dl, Access
IFNB	<Attr>
	mov	dh, Attr
ELSE
	sub	dh, dh
ENDIF
	call	AddGdtSegment
ENDM

;
; CPUID for assembler that doesn't support mnemonic.
;
IF	@@Version	LT	611

CPUID		MACRO
	DB	0Fh, 0A2h	; CPUID instruction
ENDM

ENDIF
@


0.52
log
@Stack segment for Tripple-DOS changed to 32-bit default. 16-bit stack didn't work with DPMI clients that set up stack to 32 bits and ESP > 64K! Now DJGPP stubbed programs work, but there is some problem when they return.
@
text
@d12 1
a12 1
; law, shall Vadim Drubetsky aka the Black Phantoms be liable for any special,
@


0.51
log
@Added general devices synchronization mechanism.
It's implemented for COM1 and COM2.
It causes problems with a keyboard.
@
text
@@


0.50
log
@Fixed HDD/FDD synchronization problem (trapped opcodes were overwriting each other).
@
text
@@


0.49
log
@Fixes version (log for INIT.ASM)
@
text
@@


0.48
log
@Enabled XMS 3.0 interface
@
text
@@


0.47
log
@DMA partial virtualization is made - Tripple DOS now works with floppy!
@
text
@@


0.46
log
@Fixed a bug that didn't allow Tripple DOS work with DOS loaded HIGH
@
text
@d298 1
@


0.45
log
@The shareware beta release
@
text
@@


0.44
log
@Bug fixes:
1) Checks for open file name (EDX to DX) problem
2) Reporting of the protected mode exception reboot
@
text
@d3 19
d24 2
a25 2
;	Include file for MULTI.ASM. Contains needed constant definitions and
; mocros.
d300 1
@


0.43
log
@Bug fixes:
1) Lower word in translation structure on real mode stack was being destroyed - very annoying.
2) Saved exception number was moved to task structure to allow multiple DPMI tasks work.
3 copies of WCC386 worked!
@
text
@d232 1
@


0.42
log
@1) Added XMS server
2) Memory allocation / deallocation is moved to task creation / deletion
@
text
@@


0.41
log
@Bug fixes:
1) Virtual I/O jump table (very annoying!)
2) IsFileOpen() bug if file name is 0.
@
text
@@


0.40
log
@DPMI server fixes:
1) Locker real mode and protected mode stacks usage fixed: reentrancy allowed.
2) Modes switches fixed.
@
text
@@


0.39
log
@Bug fixed: raw mode switches.
@
text
@@


0.38
log
@Bugs fixed:
1) PointerToLinear() check
2) Default interrupt redirection to V86 mode
@
text
@@


0.37
log
@Bug fixed: reflecting PM to VM interrupt.
@
text
@d216 1
a216 1
	FULL_TSS_SIZE	EQU	TSS386 + INT_PERM_SIZE + IO_PERM_SIZE
@


0.36
log
@Bug fixes:
1) CreatePageTable() called from HeapAllocMem()
2) Zero allocated PDB for new task
@
text
@@


0.35
log
@HeapAllocMem() bug fixed; free DPMI memory allocated fixed.
@
text
@@


0.34
log
@Bug fixes:
1) Initial pages map allocation
2) Translation services params
3) DPMI clean up memory release -- almost
4) INT 21h AH=4Ch in protected mode.
@
text
@@


0.33
log
@Initial full release - all DPMI functions are written! Half are not tet.
@
text
@@


0.32
log
@Translation services work.
@
text
@d292 5
@


0.31
log
@1) Interrupt redirection works
2) HeapAllocMem() bug fixes
DPMI traps fixed
@
text
@@


0.30
log
@DOS block functions are written and work. Callback to real mode mechanism established. Tests are still brief.
@
text
@d279 1
@


0.29
log
@First DPMI selector functions work (Hello, world).
@
text
@@


0.28
log
@Initial DPMI switch works.
@
text
@@


0.27
log
@Solves INT 28 block problems (doesn't lock).
@
text
@@


0.26
log
@Bugs fixed:
1) Store open file name
2) Store DOS function per process
3) Imperfect INT 13 semaphore handling.
@
text
@@


0.25
log
@Fixed bug in IsFileOpen proc.
@
text
@@


0.24
log
@Removed unnecessary dynamic allocations.
@
text
@@


0.23
log
@1) File sharing handled.
@
text
@@


0.22
log
@1) Fully split task blocking and waiting for event.
2) Annoying bug fixed (TASK_PTR).
@
text
@@


0.21
log
@1) Inproved task state handling (nesting allowed due to bit mask).
2) TASK_PTR macro used.
3) Bugs fixed.
4) X86.MCR is out of project.
@
text
@@


0.20
log
@Task locks on wait for events are added.
@
text
@d352 29
@


0.19
log
@Trap wait on keyboard (INT 16h / 0, 10h).
Bug fixes in memory allocation.
@
text
@@


0.18
log
@Keyboard virtualized.
File I/O interface for kernel is added.
@
text
@@


0.17
log
@Int 13h locking improvements, bug fixes (NC running)
@
text
@d286 1
a286 1
	CPL0_STK_SIZE	=	512	; Stack size for inner interrupts.
@


0.16
log
@Debug improvements (commands); VGA ports partial virtualizing
@
text
@@


0.15
log
@Debug improvements: hardware breakpoint
@
text
@@


0.14
log
@Bug fixes; debug improvements
@
text
@@


0.13
log
@Proper CPL 0 stack management; foreground task boost on event
@
text
@@


0.12
log
@Bug fixes: 5th task, VGA co40/co80 restore
@
text
@d275 1
a275 1
; Linear addresses base:
d280 3
a282 3
; Stacks definitions
	STK_SIZE	=	5120	; Total stack size
	SYS_STK		=	4096	; System stack.
a283 1
	EXC_STK		=	2048	; Exception stack (PL0)
d285 2
@


0.11
log
@Memory allocation enhance; bug fixes
@
text
@@


0.10
log
@VGA save/restore state fixed; bug fixes
@
text
@d277 1
@


0.9
log
@VGA state save/resore
@
text
@d41 36
@


0.8
log
@Synchronization of system services; bug fixes
@
text
@d244 2
a245 2
	STK_SIZE	=	4096	; Total stack size
	SYS_STK		=	4094	; System stack.
@


0.7
log
@Working preemptive multitasking. Interrupts are reported to ALL tasks. Different tasks cannot work with the same device.
@
text
@d245 1
@


0.7.0.1
log
@Attempt to synchronize disks with semaphores
@
text
@@


0.6
log
@Working non-preemptive multitasking
@
text
@@


0.5
log
@Working V86 emulation version!
@
text
@d245 1
@


0.4
log
@Basic V86 emulation
@
text
@@


0.3
log
@Port of previous version to 32 bits
@
text
@d52 5
a56 5
	Limit		DW	0
	BaseLow		DW	0
	BaseHigh	DB	0
	Access		DB	0
	Reserved	DW	0
d63 6
a68 6
	LimitLow	DW	0
	BaseLow		DW	0
	BaseHigh24	DB	0
	Access		DB	0
	LimitHigh20	DB	0
	BaseHigh32	DB	0
d75 5
a79 5
	DestOff		DW	0
	DestSel		DW	0
	NParams		DB	0
	Access		DB	0
	Reserved	DW	0
d87 5
a91 5
	DestOff		DW	0
	DestSel		DW	0
	NParams		DB	0
	Access		DB	0
	DestOff32	DW	0
d99 1
a99 1
	Link		DW	0
d101 22
a122 22
	Sp0		DW	0
	Ss0		DW	0
	Sp1		DW	0
	Ss1		DW	0
	Sp2		DW	0
	Ss3		DW	0

	rIp		DW	0
	rFlags		DW	0
	rAx		DW	0
	rCx		DW	0
	rDx		DW	0
	rBx		DW	0
	rSp		DW	0
	rBp		DW	0
	rSi		DW	0
	rDi		DW	0
	rEs		DW	0
	rCs		DW	0
	rSs		DW	0
	rDs		DW	0
	rLdtr		DW	0
d132 38
a169 38
	Link		DW	0
			DW	0
	Esp0		DD	0
	Ss0		DW	0
			DW	0
	Esp1		DD	0
	Ss1		DW	0
			DW	0
	Esp2		DD	0
	Ss2		DW	0
			DW	0

	rCr3		DD	0
	rEip		DD	0
	rEflags		DD	0
	rEax		DD	0
	rEcx		DD	0
	rEdx		DD	0
	rEbx		DD	0
	rEsp		DD	0
	rEbp		DD	0
	rEsi		DD	0
	rEdi		DD	0

	rEs		DW	0
			DW	0
	rCs		DW	0
			DW	0
	rSs		DW	0
			DW	0
	rDs		DW	0
			DW	0
	rFs		DW	0
			DW	0
	rGs		DW	0
			DW	0
	rLdtr		DW	0
			DW	0
d171 2
a172 2
	bTrace		DW	0
	IoTableBase	DW	0
d241 1
@


0.2
log
@Support for BIOS calls in V86 mode
@
text
@d234 4
a237 4
	VIDEO_TXT	=	28h	; Text video segment
	VIDEO_GFX	=	30h	; Gfx. video segment
	GENERAL_TSS	=	38h	; TSS for all tasks
	CODE_32		=	40h	; 32-bit code segment
d268 40
@


0.1
log
@16/05/98	Initial check-in
@
text
@d28 11
a38 1
FL_NT	EQU	00004000h	; NT flag.
d177 4
d234 4
d242 5
d259 9
@
